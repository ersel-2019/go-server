/*
 * Onboarding | GW system 2.0
 *
 * * All endpoint paths start with a version like `/v1`   * All versions must be maintained and functional forever or until decision is made to decommission a version * _`POST`_ and _`PUT`_ request **payloads are JSON** * Where possible HTTP request **status codes are used to describe the successfulness** of the requests, and content describes the details of the status <h1>Flow states</h1> <a href=\"https://viewer.diagrams.net/?highlight=0000ff&edit=_blank&layers=1&nav=1#G1cb9foqv8zgGVY0KWIQRTiE0-21ST3WUI\">Link to Diagram</a> 
 *
 * API version: 0.0.1
 * Contact: someone@ikea.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
)


// PairingApiRouter defines the required methods for binding the api requests to a responses for the PairingApi
// The PairingApiRouter implementation should parse necessary information from the http request, 
// pass the data to a PairingApiServicer to perform the required actions, then write the service results to the http response.
type PairingApiRouter interface { 
	ConfirmPairing(http.ResponseWriter, *http.Request)
	DoublePhysicalButtonTap(http.ResponseWriter, *http.Request)
	GetGWStatus(http.ResponseWriter, *http.Request)
	InitPairing(http.ResponseWriter, *http.Request)
	SinglePhysicalButtonTap(http.ResponseWriter, *http.Request)
}


// PairingApiServicer defines the api actions for the PairingApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type PairingApiServicer interface { 
	ConfirmPairing(string) (interface{}, error)
	DoublePhysicalButtonTap() (interface{}, error)
	GetGWStatus() (interface{}, error)
	InitPairing(DeviceInfo) (interface{}, error)
	SinglePhysicalButtonTap() (interface{}, error)
}
