/*
 * Onboarding | GW system 2.0
 *
 * * All endpoint paths start with a version like `/v1`   * All versions must be maintained and functional forever or until decision is made to decommission a version * _`POST`_ and _`PUT`_ request **payloads are JSON** * Where possible HTTP request **status codes are used to describe the successfulness** of the requests, and content describes the details of the status <h1>Flow states</h1> <a href=\"https://viewer.diagrams.net/?highlight=0000ff&edit=_blank&layers=1&nav=1#G1cb9foqv8zgGVY0KWIQRTiE0-21ST3WUI\">Link to Diagram</a> 
 *
 * API version: 0.0.1
 * Contact: someone@ikea.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"errors"
)

// PairingApiService is a service that implents the logic for the PairingApiServicer
// This service should implement the business logic for every endpoint for the PairingApi API. 
// Include any external packages or services that will be required by this service.
type PairingApiService struct {
}

// NewPairingApiService creates a default api service
func NewPairingApiService() PairingApiServicer {
	return &PairingApiService{}
}

// ConfirmPairing - Confirmes the ongoing pairing. The request will block until either the onboard GW button is pressed or the request times out (30s)
func (s *PairingApiService) ConfirmPairing(pairingId string) (interface{}, error) {
	// TODO - update ConfirmPairing with the required logic for this service method.
	// Add api_pairing_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'ConfirmPairing' not implemented")
}

// DoublePhysicalButtonTap - Simulates pressing the physical button on the GW twice
func (s *PairingApiService) DoublePhysicalButtonTap() (interface{}, error) {
	// TODO - update DoublePhysicalButtonTap with the required logic for this service method.
	// Add api_pairing_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'DoublePhysicalButtonTap' not implemented")
}

// GetGWStatus - Returns the status of the GW
func (s *PairingApiService) GetGWStatus() (interface{}, error) {
	// TODO - update GetGWStatus with the required logic for this service method.
	// Add api_pairing_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'GetGWStatus' not implemented")
}

// InitPairing - Initiates the pairing flow.
func (s *PairingApiService) InitPairing(deviceInfo DeviceInfo) (interface{}, error) {
	// TODO - update InitPairing with the required logic for this service method.
	// Add api_pairing_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'InitPairing' not implemented")
}

// SinglePhysicalButtonTap - Simulates pressing the physical button on the GW once
func (s *PairingApiService) SinglePhysicalButtonTap() (interface{}, error) {
	// TODO - update SinglePhysicalButtonTap with the required logic for this service method.
	// Add api_pairing_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'SinglePhysicalButtonTap' not implemented")
}
